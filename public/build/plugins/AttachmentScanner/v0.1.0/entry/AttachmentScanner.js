import{_ as y,C,E as b,k as d,W as M,o,l as c,L as v,v as s,t as T,q as r,F as u,G as f,m as S,x as l,I as w,a1 as V,Z as D,c as N,T as x}from"../../../../v9.4.0.5/chunks/bootstrap.js";import{D as A,r as E,A as q}from"../../../../v9.4.0.5/chunks/adminRouter.js";import"../../../../v9.4.0.5/chunks/vue-router.js";import"../../../../v9.4.0.5/chunks/FormGenerator.js";import"../../../../v9.4.0.5/chunks/AdminNavigationBar.js";import"../../../../v9.4.0.5/chunks/DataTableActions.js";import"../../../../v9.4.0.5/chunks/Checkbox.js";import"../../../../v9.4.0.5/chunks/HelpSection.js";const B={name:"attachment-scanner-actions",description:"Attachment Scanner Action",props:{data:{type:Object,required:!0}},data(){return{loading:!1,showModal:!1,isDisabled:!1,containerStyle:{width:"650px"}}},methods:{onClose(){this.showModal=!1},async onSubmit(){this.loading=!0;try{const t=await axios.post("scanner/update/"+this.data.name);this.showModal=!1,window.emitter.emit("refreshData"),C(t,"scanner-index")}catch(t){b(t,"scanner-index")}this.loading=!1},redirectToSettingPages(){this.$router.push(`settings/${this.data.name}`)}},components:{}},I={key:0},L={key:0},P={key:1},F={class:"modal-title"},H={key:0,class:"row"},U=["disabled"];function j(t,e,n,_,a,i){const h=d("custom-loader"),p=d("modal"),g=M("tooltip");return n.data?(o(),c("div",I,[n.data.is_configured?v((o(),c("span",L,[s("button",{class:"btn btn-light table_btn",onClick:e[0]||(e[0]=m=>a.showModal=!0)},[s("i",{class:T(n.data.status?"fas fa-xmark":"fas fa-check-circle")},null,2)])])),[[g,n.data.status?t.trans("deactivate"):t.trans("activate")]]):r("",!0),n.data.setting_url?v((o(),c("span",P,[s("button",{class:"btn btn-light table_btn",onClick:e[1]||(e[1]=(...m)=>i.redirectToSettingPages&&i.redirectToSettingPages(...m))},e[3]||(e[3]=[s("i",{class:"fas fa-cog"},null,-1)]))])),[[g,n.data.status?t.trans("configured"):t.trans("configure")]]):r("",!0),u(V,{name:"modal"},{default:f(()=>[a.showModal?(o(),S(p,{key:0,showModal:a.showModal,onClose:i.onClose,"container-style":a.containerStyle},{title:f(()=>[s("h4",F,l(n.data.status?t.trans("deactivate"):t.trans("activate"))+" "+l(n.data.name),1)]),fields:f(()=>[s("span",null,l(t.trans("are_you_sure")),1),a.loading?(o(),c("div",H,[u(h,{duration:4e3})])):r("",!0)]),controls:f(()=>[s("button",{type:"button",onClick:e[2]||(e[2]=(...m)=>i.onSubmit&&i.onSubmit(...m)),class:"btn btn-primary",disabled:this.loading},[e[4]||(e[4]=s("i",{class:"fas fa-check"},null,-1)),w(" "+l(n.data.status?t.trans("deactivate"):t.trans("activate")),1)],8,U)]),_:1},8,["showModal","onClose","container-style"])):r("",!0)]),_:1})])):r("",!0)}const k=y(B,[["render",j]]),z={name:"scanner-list",description:"Scanners List",data(){return{apiUrl:"scanner/list",columns:["name","status","actions"],options:{}}},setup(){const t=D();return{formattedTime:N(()=>t.getters.formattedTime)}},beforeMount(){const t=this;this.options={headings:{name:this.trans("name"),status:this.trans("status"),configured:this.trans("configured"),actions:this.trans("actions")},sortIcon:{base:"glyphicon",up:"glyphicon-chevron-down",down:"glyphicon-chevron-up"},texts:{filter:"",limit:""},templates:{name:function(e,n){return t.h(A,{data:n})},status:function(e,n){let _=t.h("span",{class:n.status?"btn btn-success btn-sm":"btn btn-danger btn-sm",style:"cursor:auto"},n.status===1?this.lang("active"):this.lang("inactive"));return t.h("a",{},[_])},actions:(e,n)=>t.h(k,{data:n})},sortable:["name"],filterable:["name"],pagination:{chunk:5,nav:"fixed",edge:!0},requestAdapter(e){return{paginate:1,"sort-field":e.orderBy?e.orderBy:"id","sort-order":e.ascending?"asc":"desc","search-query":e.query.trim(),page:e.page,limit:e.limit}},responseAdapter({data:e}){return{data:e.data.data,count:e.data.total}},orderBy:{column:"id",ascending:!0}}},components:{ScannerActions:k}},G={class:"col-sm-12"},O={class:"card card-light"},R={class:"card-header"},W={id:"contract-type-list",class:"card-title"},Z={class:"card-body"};function J(t,e,n,_,a,i){const h=d("alert"),p=d("data-table");return o(),c("div",G,[u(h,{componentName:"scanner-index"}),s("div",O,[s("div",R,[s("h3",W,l(t.lang("scanners_list")),1)]),s("div",Z,[u(p,{url:a.apiUrl,dataColumns:a.columns,option:a.options,scroll_to:"contract-type-list"},null,8,["url","dataColumns","option"])])])])}const K=y(z,[["render",J]]),Q={name:"scanner-settings",components:{TextField:x},description:"Scanner Settings",data(){return{scannerName:"",api_key:"",isDisabled:!0,loading:!0,api_endpoint:"",responseData:[]}},setup(){const t=D();return{formattedTime:N(()=>t.getters.formattedTime)}},beforeMount(){this.scannerName=this.$route.params.scanner,this.getInitialValue()},methods:{onChange(t,e){this[e]=t,this.isDisabled=!1},async getInitialValue(){this.loading=!0;try{const t=await axios.get("/scanner/config/"+this.scannerName);this.responseData=t.data.data,this.responseData.forEach(e=>{this[e.config]=e.value})}catch(t){b(t,"scanner-settings")}this.loading=!1},isValid(){return this.api_key.length>0},saveScannerConfigs(){if(this.$store.dispatch("unsetValidationError"),!this.isValid()){this.$store.dispatch("setValidationError",{api_key:this.lang("this_field_is_required")});return}this.isDisabled=!0;let t=[];t.push({config:"api_key",value:this.api_key}),this.api_endpoint.length&&t.push({config:"api_endpoint",value:this.api_endpoint});const e={name:this.scannerName,configValue:t};this.loading=!0,axios.post("/scanner/config",e).then(n=>{this.loading=!1,this.isDisabled=!1,C(n,"scanner-settings")}).catch(n=>{b(n,"scanner-settings")})},triggerEvent(t){(t.which||t.keyCode)===13&&this.saveScannerConfigs()}}},X={class:"col-sm-12"},Y={key:0,class:"row"},$={class:"card card-light"},tt={class:"card-header"},et={class:"card-title"},nt={class:"card-body"},st={class:"row"},at=["disabled"];function it(t,e,n,_,a,i){const h=d("alert"),p=d("custom-loader"),g=d("text-field");return o(),c("div",X,[u(h,{componentName:"scanner-settings"}),a.loading?(o(),c("div",Y,[u(p,{duration:4e3})])):r("",!0),s("div",$,[s("div",tt,[s("h3",et,l(a.scannerName),1)]),s("div",nt,[s("div",st,[a.scannerName==="AttachmentScanner"?(o(),S(g,{key:0,type:"text",name:"api_endpoint",value:a.api_endpoint,label:t.lang("api_endpoint"),classname:"col-md-5",onChange:i.onChange,required:!0},null,8,["value","label","onChange"])):r("",!0),u(g,{type:"text",name:"api_key",value:a.api_key,label:t.lang("api_key"),classname:"col-md-5",onChange:i.onChange,required:!0,keyupListener:i.triggerEvent},null,8,["value","label","onChange","keyupListener"])]),s("button",{id:"submit_btn",type:"button",onClick:e[0]||(e[0]=(...m)=>i.saveScannerConfigs&&i.saveScannerConfigs(...m)),class:"btn btn-primary",disabled:a.isDisabled},[e[1]||(e[1]=s("i",{class:"fa fa-check","aria-hidden":"true"},null,-1)),w(" "+l(t.lang("save")),1)],8,at)])])])}const ot=y(Q,[["render",it]]);let rt={path:"/scanner",component:q,name:"Attachment Scanner",redirect:"/scanner/list",children:[{path:"list",component:K,name:"scanners-list",meta:{title:"scanners-list",crumb:{link:{name:"admin_panel",to:"/"},root_link:{name:"plugins",to:"/plugins"},active:"scanners-list"}}},{path:"settings/:scanner",component:ot,name:"scanner-settings",meta:{title:"scanner-settings",crumb:{link:{name:"admin_panel",to:"/"},root_link:{name:"plugins",to:"/plugins"},active:"scanner-settings"}}}]};E.addRoute(rt);
